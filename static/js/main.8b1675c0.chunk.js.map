{"version":3,"sources":["useWriting.js","Header.js","Projects.js","Contact.js","Content.js","theme/globalStyle.js","App.js","serviceWorker.js","index.js"],"names":["useWriting","text","useState","state","setState","useEffect","interval","setInterval","letterToAdd","length","clearInterval","blink","keyframes","Blinker","styled","span","HeaderStyles","header","Header","ProjectsStyles","div","Projects","className","href","target","Contact","ContentStyles","section","Content","GlobalStyle","createGlobalStyle","AppStyles","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2MAiBeA,MAff,SAAoBC,GAAO,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,KAYxB,OAVAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3B,IAAMC,EAAcL,EAAMM,OAC1BL,EAAS,GAAD,OAAID,EAAQF,EAAKO,OACxB,IAIH,OAHGL,EAAMM,SAAWR,EAAKQ,QACvBC,cAAcJ,GAET,kBAAMI,cAAcJ,MAC1B,CAACH,EAAOF,IACJ,CAACE,I,mpBCVV,IAAMQ,EAAQC,YAAH,KAeLC,EAAUC,IAAOC,KAAV,IACEJ,GAITK,EAAeF,IAAOG,OAAV,KA4BHC,MAVf,WACE,IADgB,EAEAlB,EADN,wCACHG,EAFS,oBAGhB,OACM,kBAACa,EAAD,KACE,4BAAKb,EAAM,kBAACU,EAAD,a,s9BC5CrB,IAAMM,EAAiBL,IAAOM,IAAV,KA2GLC,MAzDf,WACE,OACE,kBAACF,EAAD,KACE,+CACA,yBAAKG,UAAU,iBACb,yBAAKA,UAAU,OACf,gCACE,gCAAK,uBAAGC,KAAK,2BAAR,qBACL,0BAAMD,UAAU,aAAhB,UAEA,gFAEF,yBAAKA,UAAU,OACb,gCACE,4BACE,uBAAGC,KAAK,6CAA6CC,OAAO,UAA5D,gBAEF,0BAAMF,UAAU,aAAhB,SACA,0BAAMA,UAAU,aAAhB,SACA,0BAAMA,UAAU,eAAhB,eAEH,4HAED,yBAAKA,UAAU,OACb,gCACE,4BACC,uBAAGC,KAAK,0CAA0CC,OAAO,UAAzD,cAED,0BAAMF,UAAU,aAAhB,SACA,0BAAMA,UAAU,gBAAhB,aAEF,gFAEF,yBAAKA,UAAU,OACb,gCACE,4BACE,uBAAGC,KAAK,6CAA6CC,OAAO,UAA5D,gBAEF,0BAAMF,UAAU,aAAhB,SACA,0BAAMA,UAAU,aAAhB,UAEF,qCAEF,yBAAKA,UAAU,OACf,gCACE,4BACE,uBAAGC,KAAK,4CAA4CC,OAAO,UAA3D,eAEF,0BAAMF,UAAU,cAAhB,WAEF,8CC/FOG,MANf,WACE,OACI,8B,wKCCN,IAAMC,EAAgBZ,IAAOa,QAAV,KAgBJC,MATf,WACE,OACE,kBAACF,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,2XCdC,IAQMG,EAAcC,YAAH,K,mLCJxB,IAAMC,EAAYjB,IAAOM,IAAV,KAoBAY,MAZf,WACE,OACE,oCACE,kBAACH,EAAD,MACA,kBAACE,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,SCRUE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD8H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8b1675c0.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\nfunction useWriting(text) {\r\n  const [state, setState] = useState('');\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const letterToAdd = state.length\r\n      setState(`${state + text[letterToAdd]}`);\r\n    }, 50);\r\n    if(state.length === text.length) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [state, text]);\r\n  return [state]\r\n}\r\n\r\nexport default useWriting","import React, {useEffect, useState} from 'react'\r\nimport styled, { keyframes } from 'styled-components';\r\nimport useWriting from './useWriting';\r\n\r\nconst blink = keyframes`\r\n0% {\r\n  opacity: 0\r\n}\r\n49% {\r\n  opacity: 0;\r\n}\r\n50% {\r\n  opacity: 1;\r\n}\r\n100% {\r\n  opacity: 1;\r\n}\r\n`;\r\n\r\nconst Blinker = styled.span`\r\n  animation: ${blink} 0.5s infinite ;\r\n  color: orange;\r\n`;\r\n\r\nconst HeaderStyles = styled.header`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  h1 {\r\n    font-weight: 100;\r\n    white-space: pre-wrap;\r\n    font-family: 'Roboto Mono', monospace;\r\n    text-align: center\r\n  }\r\n`;\r\n\r\n\r\n\r\nfunction Header() {\r\n  const text = `heron cakiqi \\n full stack developer`\r\n  const [state] = useWriting(text);\r\n  return (\r\n        <HeaderStyles>\r\n          <h1>{state}<Blinker>_</Blinker></h1>\r\n        </HeaderStyles>\r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst ProjectsStyles = styled.div`\r\n  h2 {\r\n    margin-bottom: 30px;\r\n    font-size: 1.7rem;\r\n  }\r\n  .projects-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    header {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      h3 {\r\n        margin: 0;\r\n        margin-right: 0.5rem;\r\n        a {\r\n          text-decoration: none\r\n        }\r\n      }\r\n    }\r\n    .app {\r\n      .tag {\r\n        padding: 5px 10px;\r\n        margin-left: 6px;\r\n        border-radius: 8px;\r\n        font-size: 0.7rem\r\n      }\r\n      .react {\r\n        background-color: #61DAFB;\r\n      }\r\n      .express {\r\n        background-color: #87C643;\r\n      }\r\n      .firebase {\r\n        background-color: #FFCB2B;\r\n      }\r\n      .redux {\r\n        background-color: #764ABC;\r\n      }\r\n      .jQuery {\r\n        background-color: #0769AD;\r\n      }\r\n      p {\r\n        margin-top: 0.5rem;\r\n        margin-bottom: 1.5rem;\r\n        color: #807E9A;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Projects() {\r\n  return (\r\n    <ProjectsStyles>\r\n      <h2>Latest Projects</h2>\r\n      <div className=\"projects-list\">\r\n        <div className=\"app\">\r\n        <header>\r\n          <h3> <a href=\"https://heroncakiqi.com\">heroncakiqi.com </a></h3>\r\n          <span className=\"tag react\">React</span>\r\n        </header>\r\n          <p>My personal portofolio website built with React.</p>\r\n        </div>\r\n        <div className=\"app\">\r\n          <header>\r\n            <h3> \r\n              <a href=\"https://github.com/heroncakiqi/voating-app\" target=\"_blank\">Voating app</a>\r\n            </h3>\r\n            <span className=\"tag react\">React</span>\r\n            <span className=\"tag redux\">Redux</span>\r\n            <span className=\"tag express\">express.js</span>\r\n          </header>\r\n         <p>An voating app built with React on the frontend and with express and mongoDb on the backend.</p>\r\n        </div>\r\n        <div className=\"app\">\r\n          <header>\r\n            <h3>\r\n             <a href=\"https://github.com/heroncakiqi/chat-app\" target=\"_blank\">Chat app </a>\r\n            </h3>\r\n            <span className=\"tag react\">React</span>\r\n            <span className=\"tag firebase\">firebase</span>\r\n          </header>\r\n          <p>An live chat app built with React and firestore.</p>\r\n        </div>\r\n        <div className=\"app\">\r\n          <header>\r\n            <h3>\r\n              <a href=\"https://github.com/heroncakiqi/tello-clone\" target=\"_blank\">Tello clone</a>\r\n            </h3>\r\n            <span className=\"tag react\">React</span>\r\n            <span className=\"tag redux\">Redux</span>\r\n          </header>\r\n          <p>tello</p>\r\n        </div>\r\n        <div className=\"app\">\r\n        <header>\r\n          <h3>\r\n            <a href=\"https://codepen.io/heroncakiqi/pen/jmRKbP\" target=\"_blank\">Simon game</a>\r\n          </h3>\r\n          <span className=\"tag jQuery\">jQuery</span>\r\n        </header>\r\n        <p>Simon game.</p>\r\n        </div>\r\n      </div>\r\n    </ProjectsStyles>\r\n  )\r\n}\r\n\r\nexport default Projects","import React from 'react'\r\n\r\nfunction Contact() {\r\n  return (\r\n      <h2></h2>\r\n  )\r\n}\r\n\r\nexport default Contact","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nconst ContentStyles = styled.section`\r\n  font-family: 'Open Sans', sans-serif;\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nfunction Content() {\r\n  return (\r\n    <ContentStyles>\r\n      <Projects />\r\n      <Contact />\r\n    </ContentStyles>\r\n  )\r\n}\r\n\r\nexport default Content;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const theme1 = {\r\n  primary: '#ff0198',\r\n  secondary: '#01c1d6',\r\n  danger: '#eb238e',\r\n  light: '#f4f4f4',\r\n  dark: '#222'\r\n};\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans|Roboto+Mono&display=swap');\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n    font-size: 16px;\r\n  }\r\n  a {\r\n    color: inherit; /* blue colors for links too */\r\n    text-decoration: inherit; /* no underline */\r\n  }\r\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport Header from './Header';\nimport Content from './Content';\nimport { GlobalStyle } from './theme/globalStyle';\n\nconst AppStyles = styled.div`\n  background-color: #141414;\n  color: white;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <AppStyles>\n          <Header />\n          <Content />\n      </AppStyles>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}